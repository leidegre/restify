<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Numerics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Numerics" #>
<#
    var cmap = new System.Collections.Generic.Dictionary<char, int>();
    var freq = new System.Collections.Generic.Dictionary<char, int>();
    var sourceFile = Host.ResolvePath("spotify-uri-data.txt");
    for (int i = 0; i < 26; i++)
    {   
        var a = (char)('0' + i);
        var b = (char)('A' + i);
        var c = (char)('a' + i);
        if (i < 10)
        {
            cmap[a] = i;
            freq[a] = 0;
        }
        cmap[b] = 10 + i;
        freq[b] = 0;
        cmap[c] = 36 + i;
        freq[c] = 0;
    }
    foreach (var readLine in System.IO.File.ReadAllLines(sourceFile))
    {
        var link = readLine.Split(':');
        if (link.Length > 2)
        {
            foreach (var c in link[2])
            {
                int value;
                if (freq.TryGetValue(c, out value))
                    freq[c] = value + 1;
                else
                    freq[c] = 1;
            }
            // Slow but simple
            //BigInteger x = 0;
            //for (int i = 0; i < link[2].Length; i++)
            //    x += BigInteger.Pow(cmap[link[2][i]], i + 1);
            //WriteLine(BitConverter.ToString(x.ToByteArray()).Replace("-", string.Empty));
        }
    }
    WriteLine(freq.Count == 62 ? bool.TrueString : bool.FalseString);
    for (int i = 0; i < 26; i++)
    {   
        var a = (char)('0' + i);
        var b = (char)('A' + i);
        var c = (char)('a' + i);
        if (i < 10)
            WriteLine(string.Format("{0} {1,3}   {2} {3,3}   {4} {5,3}", a, freq[a], b, freq[b], c, freq[c]));
        else
            WriteLine(string.Format("        {0} {1,3}   {2} {3,3}", b, freq[b], c, freq[c]));
    }
#>