<!DOCTYPE html>
<html>
	<head>
		<title>RESTify</title>
        <link href="stylesheet.css" rel="stylesheet" type="text/css" />
        <script type="text/javascript" src="jquery-1.6.2.min.js"></script>
        <script type="text/javascript" src="jquery-tmpl.js"></script>
        <script type="text/javascript" src="knockout-1.2.1.js"></script>
        <script type="text/javascript" src="restify.js"></script>
	</head>
	<body>

    <noscript>
        RESTify will not work with script execution disabled!
    </noscript>

    <div id="form-login" data-bind="visible: !loginInfo.isLoggedIn()">
        <h1>RESTify<br /><small class="subtitle">A Spotify REST API that happens to run in your browser ;)</small></h1>
        <form action="#login" data-bind="submit: loginInfo.submit.bind(loginInfo)">
            <ul class="form">
                <li><label>user:</label></li>
                <li><input id="user-textbox" type="text" data-bind="value: loginInfo.user" /></li>
                <li><label>pass:</label></li>
                <li><input type="password" data-bind="value: loginInfo.pass" /></li>
            </ul>
            <p>
                <label><input type="checkbox" data-bind="value: loginInfo.keepMeLoggedIn" /> keep me logged in</label>
            </p>
            <button type="submit">login</button>
        </form>
    </div>

    <div id="search" data-bind="visible: loginInfo.isLoggedIn()">
    
        <form action="#search" data-bind="submit: search">
            
            <input id="search-textbox" type="text" data-bind="value: searchText, valueUpdate: 'afterkeydown'" />

        </form>
        
    </div>

    <div id="tracks">
    
        <table class="tracks" data-bind="visible: has_tracks()">
            <tbody data-bind="template: { name: 'tracksTemplate', foreach: tracks }" />
        </table>

        <script id="tracksTemplate" type="text/html">
            <tr>
                <td><a href="#" data-bind="click: enqueue">${title}</a></td>
                <td>${artist}</td>
                <td class="track-length">${length}</td>
            </tr>      
        </script>


    </div>

    <div style="clear:both;"></div>

    <footer id="spotify-core-statement">
        This product uses SPOTIFY(R) CORE but is not endorsed, <br />certified or otherwise approved in any way by <a href="http://www.spotify.com">Spotify</a>. <br /><br />
        <a href="http://www.spotify.com">Spotify</a> is the registered trade mark of the Spotify Group.
    </footer>

    <script type="text/javascript">

        function restifyLoginViewModel(parentViewModel) {
            this.isLoggedIn = ko.observable(false);
            this.user = ko.observable("");
            this.pass = ko.observable("");
            this.keepMeLoggedIn = ko.observable(false);
            var self = this;
            this.submit = function () {
                $.postJSON("/restify/auth/login", {
                    UserName: this.user(),
                    Password: this.pass(),
                    KeepMeLoggedIn: this.keepMeLoggedIn()
                }, function (data) {
                    self.isLoggedIn(data.IsLoggedIn);
                    if (data.IsLoggedIn) {
                        $.ajaxSetup({ headers: { "X-RESTify-Instance": data.InstanceName } });
                        window.viewModel.instanceName = data.InstanceName;
                        parentViewModel.init();
                    }
                });
            }
        }

        function restifySessionViewModel() {
        }

        function trackItem(item) {
            this.id = item.Id;
            this.title = item.Title;
            this.artist = item.Artist;
            this.length = item.Length;
            this.play = function () {
                $.postJSON("/restify/gateway/play", {
                    Id: this.id
                });
            }
            this.enqueue = function () {
                $.JSON("PUT", "/restify/gateway/queue/" + encodeURIComponent(this.id));
            }
        }

        function playlistItem(item) {
            var self = this;
            this.id = ko.observable(item.Id);
            this.title = ko.observable(item.Title);
            this.count = ko.observable(item.Count);
            this.show = function () {
                $.postJSON("/restify/user/" + window.viewModel.instanceName + "/playlist", {
                    Id: this.id()
                }, function (data) {
                    var tracks = $.map(data, function (item) {
                        return new trackItem(item)
                    });
                    window.viewModel.tracks(tracks);
                });
                window.viewModel.playlist(this);
            }
        }

        function restifyViewModel() {

            var self = this;

            this.instanceName = null;

            this.loginInfo = new restifyLoginViewModel(self);

            this.playlists = ko.observableArray([]);
            this.playlist = ko.observable(null);

            this.tracks = ko.observableArray([]);
            this.has_tracks = ko.dependentObservable(function () { return this.tracks().length > 0; }, this);

            this.init = function () {
                $.postJSON("/restify/user/" + this.instanceName + "/playlists", undefined, function (data) {
                    var playlists = $.map(data, function (item) {
                        return new playlistItem(item)
                    });
                    self.playlists(playlists);
                });
            }

            this.searchText = ko.observable("");
            this.search = function () {
                $.postJSON("/restify/user/" + this.instanceName + "/search?q=" + encodeURIComponent(this.searchText()), undefined, function (data) {
                    if (data && data.Tracks) {
                        var tracks = $.map(data.Tracks, function (item) {
                            return new trackItem(item)
                        });
                        window.viewModel.tracks(tracks);
                    }
                });
            }

//            var self = this;
//            $.postJSON("/restify/auth/status", {
//                UserName: self.loginInfo.user()
//            }, function (data) {
//                self.isLoggedIn(data.IsLoggedIn);
//            });
        }

        window.viewModel = new restifyViewModel();
        ko.applyBindings(window.viewModel);

        $(function () {
            $(document)
                .keydown(function (e) {
                    // Don't fire in text-accepting inputs that we didn't directly bind to
                    if (this !== e.target && (/textarea|select/i.test(e.target.nodeName) || e.target.type === "text")) {
                        return;
                    }
                    var character = String.fromCharCode(e.which).toLowerCase();
                    if (character == "f") {
                        $("#search-textbox").focus().select();
                        e.preventDefault();
                    }
                });
            $("#user-textbox").focus();
        });

    </script>

	</body>
</html>